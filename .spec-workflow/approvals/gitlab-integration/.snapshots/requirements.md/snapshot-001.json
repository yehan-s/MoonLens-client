{
  "id": "snapshot_1758734812403_o9lwqryh8",
  "approvalId": "approval_1758734812401_1dibla0is",
  "approvalTitle": "GitLab集成需求文档",
  "version": 1,
  "timestamp": "2025-09-24T17:26:52.403Z",
  "trigger": "initial",
  "status": "pending",
  "content": "# Requirements: GitLab Integration\n\n## Overview\nGitLab集成模块为MoonLens提供与GitLab平台的深度集成能力，实现项目同步、MR事件监听、Webhook管理和API调用等核心功能。\n\n## User Stories\n\n### 1. GitLab项目导入\n**作为** 项目管理员\n**我想要** 导入我的GitLab项目\n**以便于** 对项目代码进行AI审查\n\n**验收标准**：\n- 通过GitLab Token授权访问\n- 列出用户有权限的项目\n- 批量或单个导入项目\n- 同步项目基本信息\n- 保存项目访问凭据\n\n### 2. Webhook配置\n**作为** 项目管理员\n**我想要** 配置项目Webhook\n**以便于** 自动触发代码审查\n\n**验收标准**：\n- 一键配置Webhook\n- 自动生成Webhook URL\n- 配置安全Token\n- 测试Webhook连接\n- 查看Webhook状态\n\n### 3. MR事件处理\n**作为** 开发者\n**我想要** 在创建MR时自动触发审查\n**以便于** 及时获得代码反馈\n\n**验收标准**：\n- 监听MR创建事件\n- 监听MR更新事件\n- 监听MR评论事件\n- 过滤需要审查的MR\n- 异步处理事件\n\n### 4. 审查结果同步\n**作为** 开发者\n**我想要** 在GitLab MR页面看到审查结果\n**以便于** 直接在工作流中查看反馈\n\n**验收标准**：\n- 发布MR总体评论\n- 发布逐行代码建议\n- 更新MR状态标签\n- 同步审查状态\n- 支持评论回复\n\n### 5. 项目成员同步\n**作为** 项目管理员\n**我想要** 同步GitLab项目成员\n**以便于** 管理访问权限\n\n**验收标准**：\n- 获取项目成员列表\n- 映射GitLab权限到系统权限\n- 定期同步成员变更\n- 支持权限覆盖\n- 成员变更通知\n\n## Functional Requirements\n\n### FR1: GitLab认证\n- **FR1.1**: 支持Personal Access Token认证\n- **FR1.2**: 支持OAuth 2.0应用认证\n- **FR1.3**: Token安全存储（加密）\n- **FR1.4**: Token有效性验证\n- **FR1.5**: Token刷新机制\n\n### FR2: 项目管理\n- **FR2.1**: 获取用户项目列表\n- **FR2.2**: 获取项目详细信息\n- **FR2.3**: 同步项目分支信息\n- **FR2.4**: 同步项目成员\n- **FR2.5**: 项目配置管理\n\n### FR3: Webhook管理\n- **FR3.1**: 创建项目Webhook\n- **FR3.2**: 更新Webhook配置\n- **FR3.3**: 删除Webhook\n- **FR3.4**: Webhook事件过滤\n- **FR3.5**: Webhook签名验证\n\n### FR4: MR操作\n- **FR4.1**: 获取MR列表\n- **FR4.2**: 获取MR详细信息\n- **FR4.3**: 获取MR差异(Diff)\n- **FR4.4**: 创建MR评论\n- **FR4.5**: 创建逐行评论(Discussion)\n\n### FR5: 事件处理\n- **FR5.1**: MR事件解析\n- **FR5.2**: Push事件处理\n- **FR5.3**: 评论事件处理\n- **FR5.4**: 事件队列管理\n- **FR5.5**: 事件重试机制\n\n## Non-Functional Requirements\n\n### NFR1: 性能\n- **NFR1.1**: Webhook响应时间 < 200ms\n- **NFR1.2**: API调用超时设置 30s\n- **NFR1.3**: 批量操作分页处理\n- **NFR1.4**: 并发请求限制（10 req/s）\n- **NFR1.5**: 缓存机制（项目信息、用户信息）\n\n### NFR2: 可靠性\n- **NFR2.1**: Webhook重试机制（3次）\n- **NFR2.2**: 事件幂等性保证\n- **NFR2.3**: 断点续传支持\n- **NFR2.4**: 错误恢复机制\n- **NFR2.5**: 数据一致性保证\n\n### NFR3: 安全性\n- **NFR3.1**: Token加密存储（AES-256）\n- **NFR3.2**: Webhook签名验证\n- **NFR3.3**: API请求签名\n- **NFR3.4**: 敏感信息脱敏\n- **NFR3.5**: 访问日志记录\n\n### NFR4: 兼容性\n- **NFR4.1**: GitLab CE/EE支持\n- **NFR4.2**: GitLab API v4兼容\n- **NFR4.3**: 多版本GitLab支持（13.0+）\n- **NFR4.4**: SaaS和自托管GitLab\n- **NFR4.5**: 中文界面支持\n\n## Constraints\n\n### 技术约束\n- GitLab API v4\n- REST API通信\n- Webhook事件格式\n- Rate Limiting遵守\n- Token权限范围\n\n### 业务约束\n- 只支持有权限的项目\n- 遵守GitLab使用条款\n- 不存储源代码\n- 审查结果保留期限\n- 并发审查数量限制\n\n### 集成约束\n- 依赖GitLab可用性\n- 网络连接要求\n- 防火墙配置\n- SSL证书验证\n- 代理服务器支持\n\n## Acceptance Criteria\n\n### AC1: 项目导入流程\n1. 用户输入GitLab Token\n2. 系统验证Token有效性\n3. 获取用户项目列表\n4. 用户选择要导入的项目\n5. 系统同步项目信息\n6. 创建项目记录\n\n### AC2: Webhook配置流程\n1. 选择已导入的项目\n2. 生成Webhook URL和Secret\n3. 调用GitLab API创建Webhook\n4. 配置事件类型过滤\n5. 测试Webhook连接\n6. 保存配置信息\n\n### AC3: MR审查流程\n1. GitLab触发MR事件\n2. 系统接收并验证Webhook\n3. 解析MR信息和Diff\n4. 触发AI审查任务\n5. 获取审查结果\n6. 同步结果到GitLab\n\n### AC4: 权限同步流程\n1. 获取项目成员列表\n2. 映射GitLab角色到系统角色\n3. 创建或更新用户记录\n4. 设置项目访问权限\n5. 通知权限变更\n\n## Dependencies\n\n### 外部依赖\n- GitLab API服务\n- GitLab Webhook服务\n- 网络连接\n- SSL证书\n\n### 内部依赖\n- 用户认证模块\n- 项目管理模块\n- 任务队列服务\n- 通知服务\n\n## Risks\n\n### 风险1: GitLab API变更\n- **影响**: 高\n- **概率**: 低\n- **缓解**: API版本锁定、适配层设计、监控API变更\n\n### 风险2: 网络不稳定\n- **影响**: 中\n- **概率**: 中\n- **缓解**: 重试机制、超时设置、错误处理\n\n### 风险3: Token泄露\n- **影响**: 高\n- **概率**: 低\n- **缓解**: 加密存储、最小权限、定期轮换\n\n### 风险4: Rate Limiting\n- **影响**: 中\n- **概率**: 中\n- **缓解**: 请求限流、缓存策略、批量操作\n\n## Success Metrics\n\n1. **项目导入成功率** > 95%\n2. **Webhook触发成功率** > 99%\n3. **API调用成功率** > 95%\n4. **平均响应时间** < 500ms\n5. **事件处理延迟** < 5秒",
  "fileStats": {
    "size": 5559,
    "lines": 233,
    "lastModified": "2025-09-24T17:23:51.562Z"
  },
  "comments": []
}